<html lang="en">
  <head>
    <title>זיהוי אובייקטים של Armaaruss באמצעות מודל מאומן מראש ב-TensorFlow.js</title>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
 

    <!-- Import the webpage's stylesheet -->
    <link rel="stylesheet" href="/style.css">
   
   
  </head>  
 
  <style>
  html,body,div,span,applet,object,iframe,h1,h2,h3,h4,h5,h6,p,blockquote,pre,a,abbr,acronym,address,big,cite,code,del,dfn,em,img,ins,kbd,q,s,samp,small,strike,strong,sub,sup,tt,var,b,u,i,center,dl,dt,dd,ol,ul,li,fieldset,form,label,legend,table,caption,tbody,tfoot,thead,tr,th,td,article,aside,canvas,details,embed,figure,figcaption,footer,header,hgroup,menu,nav,output,ruby,section,summary,time,mark,audio,video{font-size:100%;font:inherit;padding:0;border:0;margin:0;vertical-align:baseline z-index:12;}body{line-height:1}ol,ul{list-style:none}blockquote,q{quotes:none}blockquote:before,blockquote:after,q:before,q:after{content:'';content:none}table{border-collapse:collapse;border-spacing:0}article,aside,details,figcaption,figure,footer,header,hgroup,menu,nav,section{display:block}.clear{clear:both}
.sticky{}.bypostauthor{}.wp-caption{}.wp-caption-text{}.gallery-caption{}.alignright{}.alignleft{}.aligncenter{}

textarea:focus, input:focus{outline: none; }
*:focus {outline: none;}

body {

  background-color: #999999;
}



.wrapper {

width: 100vw;
height: 100vh;
float: left;
box-sizing: border-box;
position: relative;

   }


#endec1{
left: 300px;
top: 400px;
}

#endec2{
left: 300px;
top: 400px;
}

#intru1{
color: #fff;
  font-size: 8px;;



-webkit-animation: fit 1s infinite;
  animation: fit 1s infinite;
  width: 50%;
margin: 0 auto;
position: absolute;
bottom: 50px;
left: 0;
right: 0;
text-align: center;
}

#intru2{
  font-size: 8px;;
color: #fff;


-webkit-animation: fit 1s infinite;
  animation: fit 1s infinite;
  width: 50%;
margin: 0 auto;
position: absolute;
bottom: 50px;
left: 0;
right: 0;
text-align: center;
}


#intru{
  font-size: 8px;;



-webkit-animation: fit 1s infinite;
  animation: fit 1s infinite;
  width: 50%;
margin: 0 auto;
position: absolute;
bottom: 50px;
left: 0;
right: 0;
text-align: center;

}



.title {
  width: 100%;
  height: 20vh;
  display: table;
  text-align: center;
  box-sizing: border-box;
}
.title h1 {
font-size: 50px;
color: #FFFFFF;
  display: table-cell;
  vertical-align: middle;
}

.vision {
width: 100%;
height: 80vh;
position: relative;
overflow: hidden;
    z-index: 10;
}

.stage {
width: 100%;
  height: 100%;    
  position: absolute;
  top: 0;
  left: 0;
  right: 0;

background-size: cover;
background-repeat: no-repeat;
background-position: center;
}

.overlay {
width: 100%;
  height: 100%;
  position: relative;
 
background-repeat: repeat;
background-position: center;
}

.overlay .positionals {
width: 25%;
margin: 0 auto;
position: absolute;
bottom: 30px;
left: 50px;
text-align: left;
}
.overlay .positionals p {font-size: 12px;}

.overlay .model {
width: 25%;
margin: 0 auto;

position: absolute;
bottom: 30px;
right: 50px;
text-align: right;
}
.overlay .model p {font-size: 12px;}

.overlay .left {
width: 40%;
position: absolute;
top: 50px;
left: 50px;

}
.overlay .right {
width: 40%;
position: absolute;
top: 50px;
right: 50px;
text-align: right;
}
.overlay p {
font-size: 10px;
color: #FFFFFF;
margin: 0 auto;
}
.overlay .center {
width: 50%;
margin: 0 auto;
position: absolute;
bottom: 50px;
left: 0;
right: 0;
text-align: center;
}
.overlay .center p {font-size: 20px;}
.overlay .center p span {opacity: 1;}
span.letter1 {
-webkit-animation: letterone 1s infinite;
  animation: letterone 1s infinite;
}
span.letter2 {
-webkit-animation: lettertwo 1s infinite;
  animation: lettertwo 1s infinite;
}
span.letter3 {
-webkit-animation: letterthree 1s infinite;
  animation: letterthree 1s infinite;
}
span.letter4 {
-webkit-animation: letterfour 1s infinite;
  animation: letterfour 1s infinite;
}
span.letter5 {
-webkit-animation: letterfive 1s infinite;
  animation: letterfive 1s infinite;
}
span.letter6 {
  -webkit-animation: lettersix 0.75s infinite;
  animation: lettersix 0.75s infinite;
}



@-webkit-keyframes letterone {80% {opacity: 0;}}
@keyframes letterone {80% {opacity: 0;}}

@-webkit-keyframes lettertwo {85% {opacity: 0;}}
@keyframes lettertwo {85% {opacity: 0;}}

@-webkit-keyframes letterthree {90% {opacity: 0;}}
@keyframes letterthree {90% {opacity: 0;}}

@-webkit-keyframes letterfour {95% {opacity: 0;}}
@keyframes letterfour {95% {opacity: 0;}}

@-webkit-keyframes letterfive {100% {opacity: 0;}}
@keyframes letterfive {100% {opacity: 0;}}

@-webkit-keyframes lettersix {100% {opacity: 0;}}
@keyframes lettersix {100% {opacity: 0;}}


p.dimension1,
p.dimension2,
p.dimension3,
p.dimension4,
p.dimension5 {opacity: 0;}

p.dimension1.show,
p.dimension2.show,
p.dimension3.show,
p.dimension4.show,
p.dimension5.show {opacity: 1;}

p.dimension5.show {
-webkit-animation: fit 1s infinite;
  animation: fit 1s infinite;
}

p.dimension55.show {
-webkit-animation: fit 1s infinite;
  animation: fit 1s infinite;
}
@-webkit-keyframes fit {100% {opacity: 0;}}
@keyframes fit {100% {opacity: 0;}}




/*
----------
BELOW 1400
----------
*/
@media screen and (max-width: 1399px) {

  .overlay p {  font-size: 8px;; font-weight: bold;}
 
}

/*
----------
BELOW 1000
----------
*/
@media screen and (max-width: 999px) {
 
  .title h1 {  font-size: 8px;; font-weight: bold;}
  .overlay p {  font-size: 8px;; font-weight: bold;}
 
}
  body {
 
}

h1 {
  visibility:hidden;
}

 #title1 {
  font-size: 8px;
font-weight: bold;
color: #ffffff;
top: 73px;
left: 10px;
position: fixed;
 
}

#title48 {
  font-size: 8px;
font-weight: bold;
color: #ffffff;
top: 99px;
left: 350px;
position: fixed;
 
}


.videoView, .classifyOnClick {
  position: fixed;
 
   z-index: 100;
 
   
  cursor: pointer;

 
}


.videoView, .classifyOnClick10 {
  position: fixed;
  top: 100px;
 
   z-index: 100;
   
   
  cursor: pointer;

 
}

#liveView {

border: none;
z-index: 0;
position: fixed;
font-style: bold;
  color: #ff9853;
 
    min-width: 100%; min-height: 100%;
    width: auto; height: auto; z-index: 0;
   
    background-size: cover;

}


video {

   
}

video {
  border: 1px solid black;
  display: block;
 
border: none;
z-index: -100;
position: fixed;
font-style: bold;
  color: #ff9853;
 
    min-width: 100%; min-height: 100%;
    width: auto; height: auto; z-index: -100;
   
    background-size: cover;
}

#myCanvas2 {
  border: 1px solid black;
  display: block;
 
border: none;
z-index: -100;
position: fixed;
font-style: bold;
  color: #ff9853;
 
    min-width: 100%; min-height: 100%;
    width: auto; height: auto; z-index: -100;
   
    background-size: cover;
}


 #webcamButton{
z-index: 10;
position: relative;

}




 .classifyOnClick1 p {

position: fixed;
  padding: 5px;

  color: #FFF;
  border: 1px dashed rgba(255, 255, 255, 0.7);
  z-index: 2;
  font-size: 12px;
margin-left: -25%;
   border: 7px solid #fff;
z-index: 0;
position: fixed;
font-style: bold;
font-size: 20px;
-webkit-animation: fit 1s infinite;
  animation: fit 1s infinite;
 


 
}

.classifyOnClick p {
 border: 7px solid #ff0000;
z-index: 0;
position: fixed;
font-style: bold;
font-size: 20px;
  color: #ff0000;

-webkit-animation: fit 1s infinite;
  animation: fit 1s infinite;
 
 
}

.classifyOnClick10 p{

 border: 7px solid #ff0000;
z-index: 0;
position: fixed;
font-style: bold;
font-size: 20px;
  color: #ff0000;

  -webkit-animation: fit 1s infinite;
  animation: fit 1s infinite;

}

.classifyOnClick2 {
 
z-index: 11;
position: fixed;


 
}

#lefty{

top: 180px;

}

#centery{
  font-size: 8px;
font-weight: bold;
color: #ffffff;
top: 99px;
left: 20px;
position: fixed;
cursor: pointer;


}

#righty{

top: 180px;

}



.highlighter1 {
  background: rgba(0, 0, 0, 0);
  border: 7px solid #ff0000;
  z-index: 1;
  position: fixed;
 

  -webkit-animation: fit 1s infinite;
  animation: fit 1s infinite;
}

.highlighter {
margin-left: -25%;
 background: rgba(0, 0, 0, 0);
  border: 7px solid #fff;
  z-index: 1;
  position: fixed;


   -webkit-animation: fit 1s infinite;
  animation: fit 1s infinite;
}

.classifyOnClick {
  z-index: 4;
}

.classifyOnClick10 {
  z-index: 4;
}




canvas{

   
    zoom: 100%;
 
}

#endec {
right: 40px;

}


#demo{
top:90px;
left: 15px;
font-weight: bold;
  font-size: 8px;
color: #ffffff;
  position: fixed;

z-index: 4;

}



#demo4{

font-weight: bold;
  font-size: 8px;
color: #000000;
  position: fixed;

z-index: 4;

}

#demo5{

font-weight: bold;
  font-size: 8px;
color: #000000;
  position: fixed;

z-index: 4;

}

#digital-clock{
top: 110px;
left: 10px;
font-weight: bold;
  font-size: 8px;
color: #ffffff;
  position: fixed;

z-index: 4;

}

.classifyOnClick1 progress {
  width: 5%;
  height: 10px;
right: 50px;
top: 55px;
  position: fixed;
  z-index: 10;
}
.classifyOnClick1 progress.charging {
 border: 3px solid black;
right: 50px;
 position: fixed;
  z-index: 10;
}
.classifyOnClick1 progress.draining {
  border: 3px solid red;
 right: 50px;
  position: fixed;
   z-index: 10;
}



#batteryname {
right: 50px;
top: 45px;
  position: fixed;
  z-index: 10;
  font-weight: bold;
  font-size: 8px;
color: #ffffff;
  position: fixed;

z-index: 4;


}

.btn {


    display: inline-block;
    padding: 6px 6px;
    margin-bottom: 0;
     font-size: 8px;
    font-weight: normal;
    line-height: 0.72857143;
    text-align: right;
    white-space: nowrap;
    vertical-align: middle;
    cursor: pointer;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
    background-image: none;
    border: 1px solid transparent;
    border-radius: 4px;
}
.btn-success {

    color: #fff;
    background-color: #5cb85c;
    border-color: #4cae4c;
}
/* This is copied from https://github.com/blueimp/jQuery-File-Upload/blob/master/css/jquery.fileupload.css */
 .fileinput-button {
    position: fixed;
    overflow: hidden;
}
/*Also*/
 .fileinput-button input {
    position: absolute;
    top: 0;
    right: 0;
    margin: 0;
    opacity: 0;
    -ms-filter:'alpha(opacity=0)';
    font-size: 200px;
    direction: ltr;
    cursor: pointer;
}

.btn1 {


    display: inline-block;
    padding: 6px 6px;
    margin-bottom: 0;
    font-size: 8px;
    font-weight: normal;
    line-height: 0.72857143;
    text-align: right;
    white-space: nowrap;
   
    vertical-align: center;
    cursor: pointer;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
    background-image: none;
    border: 1px solid transparent;
    border-radius: 4px;
}
.btn-success1 {

    color: #fff;
    background-color: #5cb85c;
    border-color: #4cae4c;
}
/* This is copied from https://github.com/blueimp/jQuery-File-Upload/blob/master/css/jquery.fileupload.css */
 .fileinput-button1 {
    position: fixed;
    overflow: hidden;
}
/*Also*/
 .fileinput-button1 input {
    position: fixed;
    top: 0;
    right: 0;
    margin: 0;
    opacity: 0;
    -ms-filter:'alpha(opacity=0)';
    font-size: 200px;
    direction: ltr;
    cursor: pointer;
}
video, input {
   
}

input {
       
}

#draft{

font-weight: bold;
  font-size: 8px;
color: #000000;
  position: fixed;

z-index: 4;

}
#input{

font-weight: bold;
  font-size: 8px;
color: #000000;
  position: fixed;

z-index: 7;

}



  </style>
 
  <body >
 
 
  <div class="classifyOnClick1"  id="liveView" ></div>
   
       
 
       
   
    <style>
  #myCanvas {

pointer-events: none;
}




   .player{

 

    background: red;
 
}


#deletethislater{

margin: 10%;
margin-top: 0%;
z-index:0;
}
#liveView {
 
 
   
}
.back{
  transform: rotatey(0deg);
}
.flip-front{
 font-size:8px;
}
@media screen and (max-width: 768px){
  .flip-front{

  }
}

.aerial-front{
 font-size:8px;
}
@media screen and (max-width: 768px){
  .aerial-front{

  }
}

.intrudor-front{
 font-size:8px;
}
@media screen and (max-width: 768px){
  .intrudor-front{

  }
}

.stopsec-front{
 font-size:8px;
}
@media screen and (max-width: 768px){
  .stopsec-front{

  }
}
.stoppri-front{
 font-size:8px;
}
@media screen and (max-width: 768px){
  .stoppri-front{

  }
}

.stopprimary-front{
 font-size:8px;
}
@media screen and (max-width: 768px){
  .stopprimary-front{

  }
}


    </style>





 

     <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js"></script>

<!-- Font -->
<link href="https://fonts.googleapis.com/css?family=Inconsolata:700" rel="stylesheet">

<!-- Wrapper -->
<div class="wrapper">
   
    <!-- Title -->
<div class="title">
      <h1><span class="letter6">_</span></h1>
    </div>

<!-- Vision -->
<div class="vision">

<!-- Stage -->
<div class="stage"></div>

<!-- Overlay -->
<div class="overlay">
 <p id="deletethislater" style="text-align:right";>  זיהוי ארמארוס <br><br>המתן עד שהדגם ייטען לפני לחיצה על הלחצן זיהוי אובייקט אווירי כדי להפעיל את מצלמת האינטרנט. התוכנית תצפצף כאשר היא תמצא אובייקט אווירי. ככל שהאובייקט האווירי מרחף לידך זמן רב יותר, אות הקול ארוך יותר. עבור חיילים, פירוש הדבר יכול להיות שמזל"ט מכוון אליהם. באופן אידיאלי, חיילים ישתמשו באפליקציה בטלפונים הסלולריים שלהם ויצרפו את המכשיר לחלק העליון של הרכב שלהם או לגוף בזמן שינה בתעלות. זכור שהאלחוט של הטלפון הסלולרי חייב להישאר "כבוי" במהלך הלחימה. בסביבה אזרחית, ניתן להציב טלפון סלולרי התומך באלחוט על הגגות. עם גישה לאינטרנט, משתמש יכול לצפות מרחוק בסצנה מהאוויר באמצעות Facebook Live
    <br><br>
זיהוי פולש יצפצף כאשר יתגלה פורץ. התוכנית גם תוציא התראה קולית שאומרת "זוהה פולש" לאחר זיהוי פולש. אפליקציה זו מאפשרת לך להגדיר טלפונים במקומות שונים שיכולים לזהות מתי פולש נמצא באזור. זה יכול לשמש בפעולות סילוק ונגד מרד. זה גם שימושי לאזרחים נגד בריונים ופושעים אחרים בסביבות עירוניות. האפליקציה יכולה למנוע התקפות מארב. ניתן למקם את הטלפון בסדקים בקיר ובמקומות לא בולטים אחרים. עם גישה לאינטרנט, המשתמש יכול היה לנטר את הסצנה מרחוק דרך פייסבוק ולראות מתי פולשים קיבלו גישה לא מורשית. </p>
<!-- Positionals -->
<div id="leftbottom" class="positionals" style="position:fixed" >



</div>

<!-- Model -->

         
 
 
</div>
       
   
</div>
<p  id="intru1"></p>
<p id="intru2"></p>
<p id="intru"></p>
<!-- Left -->
<div id="lefty" class="left" style="position:fixed;left:15px; top:150px" style="position:fixed"   >

</div>

<!-- Center -->
<div id = "centery" class="center">
<p>

</p>
</div>

<!-- Right -->
<div id="righty" class="right" style="position:fixed;top:150px; right: 15px;" >




</div>

</div>

</div>

</div>



     
      <div class="classifyOnClick" style="z-index:200">
        <canvas type="button" id="myCanvas"  style="filter:opacity(0%)"  value="click"  />
      </div>
<div class="classifyOnClick1" id="liveView"  ></div>
   
       

 
        <video class="player" id="webcam" autoplay ></video>


     
 <h2></h2>
     
     
      <div>
       
       
      </div>
    </section>
   
    <footer class="note">
     
    </footer>
   <div class="classifyOnClick2"  >
             
             
             
         </div>
         
       
           </div>

   <div class="classifyonClick75"style="position:absolute;z-index:200;left:0px;bottom:0px;font-size:20px" >
   
    <input style="position:relative;z-index:200;left:0px;bottom:0px;font-size:5px" type="button" id="demo4" onClick="hideMenu()" value="הסתר תפריט"></input>
 
  <input style="position:relative;z-index:200;left:0px;bottom:0px;font-size:5px" type="button" id="demo5" onClick="showMenu()" value="הראה תפריט" ></input>
 
 
  <script>
  function hideMenu(){
   document.getElementById("flips").style.visibility = "hidden";
  document.getElementById("stopsec").style.visibility = "hidden";
   document.getElementById("webcamButtonigc").style.visibility = "hidden";
   document.getElementById("input").style.visibility = "hidden";
   document.getElementById("webcamButtongrayscale").style.visibility = "hidden";
  document.getElementById("draft").style.visibility = "hidden";
  document.getElementById("webcamButtonpri").style.visibility = "hidden";
  document.getElementById("webcamButtonstartpri").style.visibility = "hidden";
 
   document.getElementById("webcamButton4").style.visibility = "hidden";
 document.getElementById("webcamButton12").style.visibility = "hidden";
  document.getElementById("webcamButton10").style.visibility = "hidden";
      document.getElementById("webcamButtoniandg").style.visibility = "hidden";
        document.getElementById("webcamButtonreset").style.visibility = "hidden";
         document.getElementById("webcamButtoninvert").style.visibility = "hidden";
  document.getElementById("webcamButton9").style.visibility = "hidden";
             document.getElementById("webcamButton16").style.visibility = "hidden";
            document.getElementById("webcamButtonblack").style.visibility = "hidden";
 document.getElementById("aerial").style.visibility = "hidden";
  document.getElementById("intruddo").style.visibility = "hidden";
 

 
             
               
     
         
           
 
                 
                 
                 
               
 
  }
 
  function showMenu(){
  document.getElementById("flips").style.visibility = "visible";
  document.getElementById("stopsec").style.visibility = "visible";
                   document.getElementById("aerial").style.visibility = "visible";
                    document.getElementById("intruddo").style.visibility = "visible";
                    document.getElementById("webcamButton9").style.visibility = "visible";
                    document.getElementById("webcamButton16").style.visibility = "visible";
           
  document.getElementById("webcamButtonblack").style.visibility = "visible";
     document.getElementById("webcamButton10").style.visibility = "visible";
    document.getElementById("webcamButton4").style.visibility = "visible";
 document.getElementById("webcamButton12").style.visibility = "visible";
       document.getElementById("webcamButtoniandg").style.visibility = "visible";
        document.getElementById("webcamButtonreset").style.visibility = "visible";
         document.getElementById("webcamButtoninvert").style.visibility = "visible";
          document.getElementById("webcamButtongrayscale").style.visibility = "visible";
           
             document.getElementById("draft").style.visibility = "visible";
             document.getElementById("input").style.visibility = "visible";
             document.getElementById("webcamButtonpri").style.visibility = "visible";
  document.getElementById("webcamButtonstartpri").style.visibility = "visible";
             
               
                 document.getElementById("webcamButtonigc").style.visibility = "visible";
               
                 document.getElementById("webcamButton").style.visibility = "visible";
                 
  }
 
  function brightnessOff(){


document.getElementById("webcam").style.filter = 'brightness(0)';

  ctx.filter = 'brightness(0)';
  ctx2.filter = 'brightness(0)';
  ctx3.filter = 'brightness(0)';
}

function invert(){



document.getElementById("webcam").style.filter = 'invert(1)';

 
  ctx.filter = 'invert(1)';
  ctx2.filter = 'invert(1)';
  ctx3.filter = 'invert(1)';
}

function invertandgrayscale(){


 

document.getElementById("webcam").style.filter = ' invert(1) grayscale(1)';

  ctx.filter = ' invert(1) grayscale(1)';
  ctx2.filter = ' invert(1) grayscale(1)';
  ctx3.filter = ' invert(1) grayscale(1)';
 
 

}

function invertandgrayscaleandcontrast(){


 
 
document.getElementById("webcam").style.filter = ' invert(1) grayscale(1) contrast(2)';

 
  ctx.filter = ' invert(1) grayscale(1) contrast(2)';
  ctx2.filter = ' invert(1) grayscale(1) contrast(2)';
   ctx3.filter = ' invert(1) grayscale(1) contrast(2)';
}


function grayscale(){



 
 
 document.getElementById("webcam").style.filter = ' grayscale(1)';


 
  ctx.filter = ' grayscale(1)';
  ctx2.filter = ' grayscale(1)';
  ctx3.filter = ' grayscale(1)';
}

function Reset(){


 


document.getElementById("webcam").style.filter = ' none';

ctx.filter = 'none';
ctx2.filter = 'none';
ctx3.filter = 'none';

}

function enableSecdet(){

document.getElementById("myCanvas").style.pointerEvents = "visible";
document.getElementById("demo").innerHTML = "הקש על המסך כדי להתחיל איתור משני";

}

 
  </script>
 

<div id="draft" style="position:relative;z-index:200;left:0px;bottom:0px;font-size:5px" class="btn btn-success fileinput-button" ><span>בדיקה זיהוי מזל"ט (העלאת קובץ וידאו)</span><input onclick="this.value = null" type="file" id="drafty" onchange="previewFiles(this);" accept="video/m4v"/>
</div>

 
 
<button id="webcamButton12" style="position:relative;z-index:200;left:0px;bottom:0px;font-size:5px" class="stoppri-front" >הסר סרטון</button>

<button id="webcamButtonpri" style="position:relative;z-index:200;left:0px;bottom:0px;font-size:5px" class="stopprimary-front" >עצור את הזיהוי הראשי</button>

<button id="webcamButtonstartpri" style="position:relative;z-index:200;left:0px;bottom:0px;font-size:5px" class="startprimary-front" >התחל את הזיהוי הראשי</button>
 
  <script>


   var srat;
 var nosrat;
 const input4 = document.getElementById('drafty');
const videotest = document.getElementById('webcam');
const videoSource = document.createElement('source');
const button1 = document.getElementById('webcamButton12');
var c = document.getElementById("myCanvas");

var ctx2 = c.getContext("2d");

c.width = videotest.clientWidth;
c.height = videotest.clientheight;

var srat = setInterval(function (){

ctx2.drawImage(videotest, 0, 0, videotest.clientWidth, videotest.clientHeight)
}, 0);

input4.addEventListener('change', function() {
  const files = this.files || [];

  if (!files.length) return;
 
  const reader = new FileReader();

  reader.onload = function (e) {
 
  document.getElementById("demo").innerHTML= "זיהוי ראשי הופעל ";
  document.getElementById("intru1").innerHTML = " ";


  document.getElementById("intru2").innerHTML = " "; document.getElementById("deletethislater").innerHTML= " ";
   document.getElementById("divy5").style.top = "10000000px";
  clearInterval(myInterval);
  clearInterval(myInterval2);
  video1.srcObject = null;
  video2.srcObject = null;
 
 
    videoSource.setAttribute('src', e.target.result);
    videotest.appendChild(videoSource);
   
   
    videotest.removeEventListener("loadeddata", intruder);
    videotest.addEventListener("loadeddata", aerialobject);
   
   
   
     document.querySelector('.player').addEventListener('ended', function () {
     
   videotest.load();
   stop();
   videotest.addEventListener("loadeddata", aerialobject);
   

 
})

var stopprimary = document.querySelector('.stopprimary-front');

document.querySelector('.stopprimary-front').addEventListener('click', function () {

document.querySelector('.player').addEventListener('ended', function () {
     
   videotest.load();
   stop();
   videotest.removeEventListener("loadeddata", aerialobject);
   videotest.removeEventListener("loadeddata", intruder);

 
})
     
 document.getElementById("demo").innerHTML= " ";
   videotest.removeEventListener("loadeddata", aerialobject);
   videotest.addEventListener("loadeddata", predictWebcam1);
   videotest.load();
   videotest.play();
   stop(); });
   
   var startprimary = document.querySelector('.startprimary-front');

document.querySelector('.startprimary-front').addEventListener('click', function () {

document.querySelector('.player').addEventListener('ended', function () {
     
   videotest.load();
   stop();
   videotest.addEventListener("loadeddata", aerialobject);
   

 
})
     
 document.getElementById("demo").innerHTML= "זיהוי ראשי הופעל ";
   videotest.addEventListener("loadeddata", aerialobject);
   
   videotest.load();
   videotest.play();
   stop(); });
   

var stoppri1 = document.querySelector('.stoppri-front');

document.querySelector('.stoppri-front').addEventListener('click', function () {
     
 document.getElementById("demo").innerHTML= "הסרת וידאו.....";
   videotest.removeEventListener("loadeddata", aerialobject);
   
   videotest.load();
   videotest.play();
   stop();
   
  setTimeout(function(){
 document.getElementById("intru1").innerHTML = " ";


  document.getElementById("intru2").innerHTML = " ";
 airhelpp.loop = false;
song1air.loop = false;
  document.getElementById("demo").innerHTML= " ";
document.getElementById("demo").innerHTML= " ";
   document.getElementById("myCanvas").style.pointerEvents = "none";
   clearInterval(myInterval2);

  var nosrat = clearInterval(srat);
       
   videotest.load();
   
   videotest.srcObject = null;
   videotest.removeAttribute('src');
   videotest.removeChild(videoSource);
 

e.target.value = "";
 

  }, 2000);
       

 
})


   
 
     const imageContainers3 = document.getElementsByClassName('classifyOnClick');

// Now let's go through all of these and add a click event listener.
for (let i = 0; i < imageContainers3.length; i++) {
  // Add event listener to the child element whichis the img element.
  imageContainers3[i].children[0].removeEventListener('click', begin1);
  imageContainers3[i].children[0].removeEventListener('click', begin2);
 imageContainers3[i].children[0].addEventListener('click', begin2);
}
stopsec.onclick = function(){
 clearInterval(myInterval2);
 document.getElementById("demo").innerHTML = " ";

 
}


  };
 
  reader.onprogress = function (e) {
    console.log('progress: ', Math.round((e.loaded * 100) / e.total));
  };
 

  reader.readAsDataURL(files[0]);
});


 
  </script>
 <div id="divy5" class="classifyOnClick" style="position:fixed;z-index:1;left:0px;top:0px;bottom:0px;"   >
        <canvas   id="myCanvas1"  width=1300 height=1300  />
      </div>
   <div id="input"  style="position:relative;z-index:200;left:0px;bottom:0px;font-size:5px" class="btn btn-success fileinput-button">
        <span>בדיקת זיהוי מזל"טים (העלה קובץ תמונה)</span>
         <input id="inputs" onclick="this.value = null" type="file" name="file"></input>
       
</div>

<button class="removeimage" style="position:relative;z-index:200;left:0px;bottom:0px;font-size:5px" id="webcamButton4" onClick=" delet()" >הסר תמונה</button>
 
 <script>
 var input6 = document.getElementById('inputs')


const c3 = document.getElementById("myCanvas1");

ctx3 = c3.getContext("2d");


var intervo1s;
var intervo1sclear;


input6.onchange=function(event) {
document.getElementById("intru1").innerHTML = " ";


  document.getElementById("intru2").innerHTML = " ";
document.getElementById("deletethislater").innerHTML= " ";
clearInterval(myInterval);
  clearInterval(myInterval2);
  video1.srcObject = null;
  video2.srcObject = null;

    var img = new Image()
    img.onload = function() {
     
  document.getElementById("divy5").style.top = "0px";
  document.getElementById("demo").innerHTML = " ";
   c3.width = "1300";
        c3.height = "900";
   
       
       
       

var intervo1s = setInterval(function(){
  ctx3.drawImage(img, 0, 0, 1300, 900)}, 0);
 

    const imageContainers4 = document.getElementsByClassName('classifyOnClick');  
 for (let i = 0; i < imageContainers4.length; i++) {
  // Add event listener to the child element whichis the img element.
  imageContainers4[i].children[0].removeEventListener('click', begin1);
  imageContainers4[i].children[0].removeEventListener('click', begin2);
 imageContainers4[i].children[0].addEventListener('click', begin2);
}


stopsec.onclick = function(){

 clearInterval(myInterval2);
 document.getElementById("demo").innerHTML = " ";
 

 
 
}      
       
function clearint(){
clearInterval(intervo1s);
}

 document.getElementById("webcamButton4").addEventListener('click', clearint);
//when the button is clicked


$('.removeimage').click(function () {

document.getElementById("intru1").innerHTML = " ";


  document.getElementById("intru2").innerHTML = " ";
  //stop the interval
  var intervo1sclear = clearInterval(intervo1s);
 
  c3.width = "0";
        c3.height = "0";
   
 ctx3.clear();
 airhelpp.loop = false;
song1air.loop = false;
 

});

       
       
       
       
       
       
         
        URL.revokeObjectURL(this.src)
    }
    img.src = URL.createObjectURL(this.files[0])
   
}





function delet(){
 document.getElementById("demo").innerHTML = " ";
c3.width = c3.width;
ctx3.clear();
var intervo1sclear = clearInterval(intervo1s);
 airhelpp.loop = false;
song1air.loop = false;
document.getElementById("intru1").innerHTML = " ";


  document.getElementById("intru2").innerHTML = " ";
 
     
    }
 </script>




 





 
 
 
  <p id=demo> </p>
 
 
   
         
   <button id="flips" style="position:relative;z-index:200;left:0px;bottom:0px;font-size:5px" class="flip-front">היפוך מצלמה</button>
   
     
    <button id="stopsec" style="position:relative;z-index:200;left:0px;bottom:0px;font-size:5px" class="stopsec-front">עצירת זיהוי משני</button>
   
     
   
     <button id="aerial" style="position:relative;z-index:200;left:0px;bottom:0px;font-size:5px" class="aerial-front">הפעל זיהוי אובייקט אווירי</button>
   
     <button id="intruddo" style="position:relative;z-index:200;left:0px;bottom:0px;font-size:5px" class="intrudor-front">הפעל זיהוי פולשים</button>


   
     
     <button style="position:relative;z-index:200;left:0px;bottom:0px;font-size:5px" id="webcamButton10" onClick="enableSecdet()" >הפעל זיהוי משני</button>
     
       
       

         
           
           
                   


  <input style="position:relative;z-index:200;left:0px;bottom:0px;font-size:5px" type="button" id="webcamButton9" value="הסר טקסט מסך"></input>
 
        <input style="position:relative;z-index:200;left:0px;bottom:0px;font-size:5px" type="button" id="webcamButton16" value= "טקסט מסך לתצוגה" </input>
       
        <input style="position:relative;z-index:200;left:0px;bottom:0px;font-size:5px" type="button" id="webcamButtongrayscale" onClick="grayscale()" value="הפעל גווני אפור"></input>
       
         <input style="position:relative;z-index:200;left:0px;bottom:0px;font-size:5px" type="button" id="webcamButtoninvert" onClick="invert()" value="היפוך /ראיית לילה"></input>
         
           <input style="position:relative;z-index:200;left:0px;bottom:0px;font-size:5px" type="button" id="webcamButtonreset" onClick="Reset()" value="איפוס צבע"></input>
           
            <input style="position:relative;z-index:200;left:0px;bottom:0px;font-size:5px" type="button" id="webcamButtoniandg" onClick=" invertandgrayscale()" value="היפוך וגווני אפור"></input>
           
            <input style="position:relative;z-index:200;left:0px;bottom:0px;font-size:5px" type="button" id="webcamButtonigc" onClick=" invertandgrayscaleandcontrast()" value="היפוך , גווני אפור וניגודיות"></input>
           
             <input style="position:relative;z-index:200;left:0px;bottom:0px;font-size:5px" type="button" id="webcamButtonblack" onClick=" brightnessOff()" value="שָׁחוֹר"></input>
           
             
           
 

</div>
               
   
    <!-- Import TensorFlow.js library -->
    <script src="https://cdn.jsdelivr.net/npm/@tensorflow/tfjs@2.0.0/dist/tf.min.js" type="text/javascript"></script>
   
    <!-- Load the coco-ssd model to use to recognize things in images -->
    <script src="https://cdn.jsdelivr.net/npm/@tensorflow-models/coco-ssd"></script>
   
    <!-- Import the page's JavaScript to do some stuff -->
    <script src="/script.js" defer></script>
    <script>
    /**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */

/********************************************************************
 * Demo created by Jason Mayes 2020.
 *
 * Got questions? Reach out to me on social:
 * Twitter: @jason_mayes
 * LinkedIn: https://www.linkedin.com/in/creativetech
 ********************************************************************/

const demosSection = document.getElementById('demos');

var model = undefined;

// Before we can use COCO-SSD class we must wait for it to finish
// loading. Machine Learning models can be large and take a moment to
// get everything needed to run.
cocoSsd.load().then(function (loadedModel) {
  model = loadedModel;
  // Show demo section now model is ready to use.
  demosSection.classList.remove('invisible');
});


/********************************************************************
// Demo 1: Grab a bunch of images from the page and classify them
// upon click.
********************************************************************/

// In this demo, we have put all our clickable images in divs with the
// CSS class 'classifyOnClick'. Lets get all the elements that have
// this class.
const imageContainers = document.getElementsByClassName('classifyOnClick');

// Now let's go through all of these and add a click event listener.
for (let i = 0; i < imageContainers.length; i++) {
  // Add event listener to the child element whichis the img element.
  imageContainers[i].children[0].removeEventListener('click', begin1);
  imageContainers[i].children[0].removeEventListener('click', begin2);
}

// When an image is clicked, let's classify it and display results!



/********************************************************************
// Demo 2: Continuously grab image from webcam stream and classify it.
// Note: You must access the demo on https for this to work:
// https://tensorflow-js-image-classification.glitch.me/
********************************************************************/

const video = document.getElementById('webcam');
const liveView = document.getElementById('liveView');

// Check if webcam access is supported.
function hasGetUserMedia() {
  return !!(navigator.mediaDevices &&
    navigator.mediaDevices.getUserMedia);
}

// Keep a reference of all the child elements we create
// so we can remove them easilly on each render.
var children = [];


// If webcam supported, add event listener to button for when user
// wants to activate it.


const ce = document.getElementById("myCanvas");

const ctx = ce.getContext("2d");

var img = new Image();
img.onload = function(){
   ce.width = video1.clientWidth;
     ce.height = video1.clientHeight;
    ctx.filter = 'brightness(1)';
   ctx.drawImage(img, 0,0);
   setInterval(function(){
   ctx.drawImage(video1, 0,0, video1.clientWidth, video1.clientHeight)}, 1);
      };
  img.crossOrigin = "Anonymous";      
  img.src = "https://cdn.glitch.com/74418d0b-3465-49a2-8c71-a721b7734473%2Fcats_flickr_publicdomain.jpg?v=1579294753947";


var video1 = document.getElementById("webcam");
var liveView1 = document.getElementById("liveView");

var el = true;
var flipFront = document.querySelector(".flip-front");
var aerial = document.querySelector(".aerial-front");
var intrudor = document.querySelector(".intrudor-front");
var stopsec = document.querySelector(".stopsec-front");

function get1Video(el){

  navigator.mediaDevices.getUserMedia({
    video: {

            facingMode: el?'user':'environment'
},
    audio: false
  }).then(d=>{
 (el===false)?video1.classList.add("back"):video1.classList.remove("back");
 
 document.getElementById("intru1").innerHTML = " ";


  document.getElementById("intru2").innerHTML = " ";
 document.getElementById("deletethislater").innerHTML= " ";
 document.getElementById("divy5").style.top = "10000000px";
clearInterval(myInterval2);
document.getElementById("demo").innerHTML= "זיהוי ראשי הופעל ";
    video1.srcObject = d;
    video1.play();
    video1.addEventListener("loadeddata", intruder);
     video1.removeEventListener("loadeddata", aerialobject);
 const imageContainers = document.getElementsByClassName('classifyOnClick');

// Now let's go through all of these and add a click event listener.
for (let i = 0; i < imageContainers.length; i++) {
  // Add event listener to the child element whichis the img element.
  imageContainers[i].children[0].addEventListener('click', begin1);
  imageContainers[i].children[0].removeEventListener('click', begin2);
 
}

 
 
 
 
 
    })  
 
  .catch(err=>{
  var msg = 'Either your video cam is missing OR not working properly. Please check.';
  (err.name==='NotFoundError')?alert('Error name: '+err.name+'\nError msg: '+msg):alert('Error name: '+err.name+'\nError msg: '+err.message);
  });
 
 var stopprimary = document.querySelector('.stopprimary-front');

document.querySelector('.stopprimary-front').addEventListener('click', function () {


 document.getElementById("demo").innerHTML= " ";
   video1.removeEventListener("loadeddata", aerialobject);
   video1.removeEventListener("loadeddata", intruder);
   video1.addEventListener("loadeddata", predictWebcam1);
   video1.load();
   video1.play();
    });
   
   var startprimary = document.querySelector('.startprimary-front');

document.querySelector('.startprimary-front').addEventListener('click', function () {


document.getElementById("demo").innerHTML= "זיהוי ראשי הופעל ";
 video1.removeEventListener("loadeddata", aerialobject);
 video1.removeEventListener("loadeddata", predictWebcam1);
   video1.addEventListener("loadeddata", intruder);
   
   video1.load();
   video1.play();
    });
   
 

   flipFront.onclick = function(){
el=!el;
  stop();
  get1Video(el);
 
 
 
}

intrudor.onclick = function(){

 
  get1Video(el);
 
 
 
 
 
}

aerial.onclick = function(){

 
  get2Video(el);
 
 
 
}

stopsec.onclick = function(){
 clearInterval(myInterval);
 document.getElementById("demo").innerHTML = " ";
  get1Video(el);

 
 
}





var stop = () => video1.srcObject && video1.srcObject.getTracks().map(t => t.stop());  
   
}

intrudor.onclick = function(){



 
  get1Video(el);
 
 

 
 
 
}

var helpp;
var song1;

var helpp = new Audio('https://www.soundjay.com/buttons/sounds/beep-01a.mp3');

var song1 = new Audio('https://dl.dropboxusercontent.com/scl/fi/2ujuzpwq1nmxqz66m3z6c/ttsMP3.com_VoiceText_2024-3-31_16-45-30.mp3?rlkey=uaovosqfsll9wv2o1sf2syyda&.mp3dl=0');
 

function enhancedintruder (event) {
document.getElementById("intru1").innerHTML = " ";


  document.getElementById("intru2").innerHTML = " ";

 helpp.loop = false;
song1.loop = false;
 
   model.detect(event.target).then(function (predictions) {
    // Lets write the predictions to a new paragraph element and
    // add it to the DOM.
 
   
    for (let n = 0; n < predictions.length; n++) {
 
 

if ( predictions[n].class == "person") {

predictions[n].class = "זוהה פולש"

document.getElementById("intru1").innerHTML = "זוהה פולש";


helpp.play();
helpp.loop = true;




song1.play();
song1.loop = true;






      // Description text
       
      const p = document.createElement('p');
      p.innerText = predictions[n].class  + '  '
            + ""
            + '';
      // Positioned at the top left of the bounding box.
      // Height is whatever the text takes up.
      // Width subtracts text padding in CSS so fits perfectly.
      p.style = 'left: ' + predictions[n].bbox[2] + 'px;' +
          'top: ' + predictions[n].bbox[1] + 'px; ' +
          'width: ' + (predictions[n].bbox[0] - 10) + 'px;';

      const highlighter = document.createElement('div');
      highlighter.setAttribute('class', 'highlighter1');
    highlighter.style = 'left: ' + predictions[n].bbox[0] + 'px;' +
          'top: ' + predictions[n].bbox[1] + 'px;' +
          'width: ' + predictions[n].bbox[2] + 'px;' +
          'height: ' + predictions[n].bbox[3] + 'px;';
         p.style = 'left: ' + predictions[n].bbox[0] + 'px;' +
          'top: ' + predictions[n].bbox[1] + 'px; ' +
          'width: ' + (predictions[n].bbox[2] - 5) + 'px;';
         
           
         
setInterval(function(){
  event.target.parentNode.removeChild(highlighter);
 event.target.parentNode.removeChild(p);
 

},9);

     if (event.target.parentNode.appendChild(highlighter)){
     
    setTimeout(() => {
     setInterval(function(){
     
  event.target.parentNode.removeChild(highlighter);
  event.target.parentNode.removeChild(p);
 
 

},9);
 event.target.parentNode.appendChild(p);
  imageContainers[i].addEventListener('load', handleClick);
},9);  



      }
     
     
     
      if (event.target.parentNode.appendChild(p)){
      setTimeout(() => {
 event.target.parentNode.removeChild(p);
 
 
}, 9); }

 if (event.target.parentNode.removeChild(p)){
      setTimeout(() => {
      document.getElementById("intru1").innerHTML = "";

 event.target.parentNode.removeChild(p);
 
 
}, 3); }
 


     

      event.target.parentNode.appendChild(p1);
     event.target.parentNode.appendChild(p);
     event.target.parentNode.appendChild(highlighter);
     
     
     
     

 
 
   
      children.push.appendChild(highlighter);
      children.push.appendChild(p);
    }
    }
   
 
  window.requestAnimationFrame(enhancedintruder);

  });
}

var helpp;
var song1;

var helpp = new Audio('https://www.soundjay.com/buttons/sounds/beep-01a.mp3');

var song1 = new Audio('https://dl.dropboxusercontent.com/scl/fi/2ujuzpwq1nmxqz66m3z6c/ttsMP3.com_VoiceText_2024-3-31_16-45-30.mp3?rlkey=uaovosqfsll9wv2o1sf2syyda&.mp3dl=0');

function intruder() {
document.getElementById("intru1").innerHTML = " ";


  document.getElementById("intru2").innerHTML = " ";

 
  helpp.loop = false;
song1.loop = false;


model.detect(video).then(function (predictions) {

for (let i = 0; i < children.length; i++) {


liveView.removeChild(children[i]);


}

children.splice(0);


for (let n = 0; n < predictions.length; n++) {



if ( predictions[n].class == "person") {

predictions[n].class = "Intruder Detected"


predictions[n].class = "זוהה פולש"

document.getElementById("intru1").innerHTML = "זוהה פולש";


helpp.play();
helpp.loop = true;




song1.play();
song1.loop = true;








    const p = document.createElement('p');
        p.innerText = predictions[n].class  + '  '
            + ""
            + '';
        // Draw in top left of bounding box outline.
        p.style = 'left: ' + (predictions[n].bbox[0] + 100) + 'px;' +
            'top: ' + predictions[n].bbox[1] + 'px;' +
            'width: ' + + (predictions[n].bbox[2] + 230) + 'px;';

        // Draw the actual bounding box.
        const highlighter1 = document.createElement('div');
        highlighter1.setAttribute('class', 'highlighter');
        highlighter1.style = 'left: ' + (predictions[n].bbox[0] + 100) + 'px; top: '
            + predictions[n].bbox[1] + 'px; width: '
           
            + (predictions[n].bbox[2] + 240) + 'px; height: '
             + (predictions[n].bbox[3] + 210) + 'px;';
           
           
           
liveView.appendChild(highlighter1);

liveView.appendChild(p);



children.push(highlighter1);

children.push(p);


}

else{

}

}

window.requestAnimationFrame(intruder);

});

}
var myInterval;
function begin1(event){

myInterval = setInterval(function () {

  enhancedintruder(event)}, 6);
 document.getElementById("demo").innerHTML = "זיהוי משני הופעל";
 
//when the button is clicked


$('button').click(function () {

  //stop the interval
  clearInterval(myInterval);
 
 
});

}


var video2 = document.getElementById("webcam");
var liveView2 = document.getElementById("liveView");

var el = true;
var flipFront = document.querySelector(".flip-front");
var aerial = document.querySelector(".aerial-front");
var intrudor = document.querySelector(".intrudor-front");

function get2Video(el){

  navigator.mediaDevices.getUserMedia({
    video: {

            facingMode: el?'user':'environment'
},
    audio: false
  }).then(d=>{
 (el===false)?video2.classList.add("back"):video2.classList.remove("back");
 document.getElementById("intru1").innerHTML = " ";


  document.getElementById("intru2").innerHTML = " ";
 document.getElementById("deletethislater").innerHTML= " ";
  document.getElementById("divy5").style.top = "10000000px";
clearInterval(myInterval);
document.getElementById("demo").innerHTML= "זיהוי ראשי הופעל ";
    video2.srcObject = d;
    video2.play();
    video2.addEventListener("loadeddata", aerialobject);
    video2.removeEventListener("loadeddata", intruder);
     const imageContainers2 = document.getElementsByClassName('classifyOnClick');

// Now let's go through all of these and add a click event listener.
for (let i = 0; i < imageContainers2.length; i++) {
  // Add event listener to the child element whichis the img element.
   imageContainers2[i].children[0].removeEventListener('click', begin1);
  imageContainers2[i].children[0].addEventListener('click', begin2);
 
}
 

 
 
 
 
 
    })  
 
  .catch(err=>{
  var msg = 'Either your video cam is missing OR not working properly. Please check.';
  (err.name==='NotFoundError')?alert('Error name: '+err.name+'\nError msg: '+msg):alert('Error name: '+err.name+'\nError msg: '+err.message);
  });
 
 
 var stopprimary = document.querySelector('.stopprimary-front');

document.querySelector('.stopprimary-front').addEventListener('click', function () {


 document.getElementById("demo").innerHTML= " ";
   video2.removeEventListener("loadeddata", aerialobject);
   video2.removeEventListener("loadeddata", intruder);
   video2.addEventListener("loadeddata", predictWebcam1);
   video2.load();
   video2.play();
    });
   
   var startprimary = document.querySelector('.startprimary-front');

document.querySelector('.startprimary-front').addEventListener('click', function () {


 document.getElementById("demo").innerHTML= "זיהוי ראשי הופעל ";
 video2.removeEventListener("loadeddata", intruder);
 video2.removeEventListener("loadeddata", predictWebcam1);
   video2.addEventListener("loadeddata", aerialobject);
   
   video2.load();
   video2.play();
    });

   flipFront.onclick = function(){
el=!el;
  stop();
  get2Video(el);
 
 
 
}

intrudor.onclick = function(){

 
  get1Video(el);
 
 
 
 
 
}

aerial.onclick = function(){

 
  get2Video(el);
 
 
 
}

stopsec.onclick = function(){
 clearInterval(myInterval2);
 document.getElementById("demo").innerHTML = " ";
  get2Video(el);

 
 
}




var stop = () => video2.srcObject && video2.srcObject.getTracks().map(t => t.stop());  
   
}

aerial.onclick = function(){



 
  get2Video(el);
 
 

 
 
 
}

 
var airhelp;
var song1air;

  var airhelpp =  new Audio('https://www.soundjay.com/buttons/sounds/beep-01a.mp3');

var song1air = new Audio('https://dl.dropboxusercontent.com/scl/fi/3tyx6d0acy043jwt0yq3s/ttsMP3.com_VoiceText_2024-3-31_16-45-57.mp3?rlkey=v2tmerr4x8s67ff1djhj5dvz5&.mp3dl=0');

function aerialobject() {
document.getElementById("intru1").innerHTML = " ";


  document.getElementById("intru2").innerHTML = " ";

airhelpp.loop = false;
song1air.loop = false;


model.detect(video).then(function (predictions) {

for (let i = 0; i < children.length; i++) {

liveView.removeChild(children[i]);

}

children.splice(0);





for (let n = 0; n < predictions.length; n++) {
      // If we are over 66% sure we are sure we classified it right, draw it!
   


if ( predictions[n].class == "bird") {

predictions[n].class = "זוהה אובייקט אווירי"
document.getElementById("intru2").innerHTML = "זוהה אובייקט אווירי";

airhelpp.play();
airhelpp.loop = true;

song1air.play();
song1air.loop = true;




const p = document.createElement('p');
        p.innerText = predictions[n].class  + '  '
            + ""
            + '';
        // Draw in top left of bounding box outline.
        p.style = 'left: ' + (predictions[n].bbox[0] + 550) + 'px;' +
            'top: ' + predictions[n].bbox[1] + 'px;' +
            'width: ' + + (predictions[n].bbox[2] + 230) + 'px;';

        // Draw the actual bounding box.
        const highlighter = document.createElement('div');
        highlighter.setAttribute('class', 'highlighter');
        highlighter.style = 'left: ' + (predictions[n].bbox[0] + 550) + 'px; top: '
            + predictions[n].bbox[1] + 'px; width: '
           
            + (predictions[n].bbox[2] + 240) + 'px; height: '
             + (predictions[n].bbox[3] + 210) + 'px;';
           
           


liveView.appendChild(highlighter);

liveView.appendChild(p);

children.push(highlighter);

children.push(p);


}

else{

}


if ( predictions[n].class == "kite") {

predictions[n].class = "זוהה אובייקט אווירי"
document.getElementById("intru2").innerHTML = "זוהה אובייקט אווירי";

airhelpp.play();
airhelpp.loop = true;

song1air.play();
song1air.loop = true;





 const p = document.createElement('p');
        p.innerText = predictions[n].class  + '  '
            + ""
            + '';
        // Draw in top left of bounding box outline.
        p.style = 'left: ' + (predictions[n].bbox[0] + 550) + 'px;' +
            'top: ' + predictions[n].bbox[1] + 'px;' +
            'width: ' + + (predictions[n].bbox[2] + 230) + 'px;';

        // Draw the actual bounding box.
        const highlighter = document.createElement('div');
        highlighter.setAttribute('class', 'highlighter');
        highlighter.style = 'left: ' + (predictions[n].bbox[0] + 550) + 'px; top: '
            + predictions[n].bbox[1] + 'px; width: '
           
            + (predictions[n].bbox[2] + 240) + 'px; height: '
             + (predictions[n].bbox[3] + 210) + 'px;';
           
           

liveView.appendChild(highlighter);

liveView.appendChild(p);

children.push(highlighter);

children.push(p);


}

else{

}






if ( predictions[n].class == "frisbee") {

predictions[n].class = "זוהה אובייקט אווירי"
document.getElementById("intru2").innerHTML = "זוהה אובייקט אווירי";

airhelpp.play();
airhelpp.loop = true;

song1air.play();
song1air.loop = true;





 const p = document.createElement('p');
        p.innerText = predictions[n].class  + '  '
            + ""
            + '';
        // Draw in top left of bounding box outline.
        p.style = 'left: ' + (predictions[n].bbox[0] + 550) + 'px;' +
            'top: ' + predictions[n].bbox[1] + 'px;' +
            'width: ' + + (predictions[n].bbox[2] + 230) + 'px;';

        // Draw the actual bounding box.
        const highlighter = document.createElement('div');
        highlighter.setAttribute('class', 'highlighter');
        highlighter.style = 'left: ' + (predictions[n].bbox[0] + 550) + 'px; top: '
            + predictions[n].bbox[1] + 'px; width: '
           
            + (predictions[n].bbox[2] + 240) + 'px; height: '
             + (predictions[n].bbox[3] + 210) + 'px;';
           
           
           


liveView.appendChild(highlighter);

liveView.appendChild(p);

children.push(highlighter);

children.push(p);


}

else{

}

if ( predictions[n].class == "traffic light") {

predictions[n].class = "זוהה אובייקט אווירי"
document.getElementById("intru2").innerHTML = "זוהה אובייקט אווירי";

airhelpp.play();
airhelpp.loop = true;

song1air.play();
song1air.loop = true;



   const p = document.createElement('p');
        p.innerText = predictions[n].class  + '  '
            + ""
            + '';
        // Draw in top left of bounding box outline.
        p.style = 'left: ' + (predictions[n].bbox[0] + 550) + 'px;' +
            'top: ' + predictions[n].bbox[1] + 'px;' +
            'width: ' + + (predictions[n].bbox[2] + 230) + 'px;';

        // Draw the actual bounding box.
        const highlighter = document.createElement('div');
        highlighter.setAttribute('class', 'highlighter');
        highlighter.style = 'left: ' + (predictions[n].bbox[0] + 550) + 'px; top: '
            + predictions[n].bbox[1] + 'px; width: '
           
            + (predictions[n].bbox[2] + 240) + 'px; height: '
             + (predictions[n].bbox[3] + 210) + 'px;';
           
           
           


liveView.appendChild(highlighter);

liveView.appendChild(p);

children.push(highlighter);

children.push(p);


}

else{

}




if ( predictions[n].class == "airplane") {

predictions[n].class = "זוהה אובייקט אווירי"
document.getElementById("intru2").innerHTML = "זוהה אובייקט אווירי";

airhelpp.play();
airhelpp.loop = true;

song1air.play();
song1air.loop = true;







    const p = document.createElement('p');
        p.innerText = predictions[n].class  + '  '
            + ""
            + '';
        // Draw in top left of bounding box outline.
        p.style = 'left: ' + (predictions[n].bbox[0] + 550) + 'px;' +
            'top: ' + predictions[n].bbox[1] + 'px;' +
            'width: ' + + (predictions[n].bbox[2] + 230) + 'px;';

        // Draw the actual bounding box.
        const highlighter = document.createElement('div');
        highlighter.setAttribute('class', 'highlighter');
        highlighter.style = 'left: ' + (predictions[n].bbox[0] + 550) + 'px; top: '
            + predictions[n].bbox[1] + 'px; width: '
           
            + (predictions[n].bbox[2] + 240) + 'px; height: '
             + (predictions[n].bbox[3] + 210) + 'px;';
           
           


liveView.appendChild(highlighter);

liveView.appendChild(p);

children.push(highlighter);

children.push(p);


}

else{

}

}

window.requestAnimationFrame(aerialobject);

});

}

var airhelp;
var song1air;

  var airhelpp =  new Audio('https://www.soundjay.com/buttons/sounds/beep-01a.mp3');

var song1air = new Audio('https://dl.dropboxusercontent.com/scl/fi/3tyx6d0acy043jwt0yq3s/ttsMP3.com_VoiceText_2024-3-31_16-45-57.mp3?rlkey=v2tmerr4x8s67ff1djhj5dvz5&.mp3dl=0');

   
   
  function enhancedaerial (event){
  document.getElementById("intru1").innerHTML = " ";


  document.getElementById("intru2").innerHTML = " ";
 airhelpp.loop = false;
song1air.loop = false;
 
  model.detect(event.target).then(function (predictions) {
    // Lets write the predictions to a new paragraph element and
    // add it to the DOM.
   
 
    for (let n = 0; n < predictions.length; n++) {
     
     
     if ( predictions[n].class == "traffic light") {

predictions[n].class = "זוהה אובייקט אווירי"
document.getElementById("intru2").innerHTML = "זוהה אובייקט אווירי";

airhelpp.play();
airhelpp.loop = true;

song1air.play();
song1air.loop = true;


 const p = document.createElement('p');
     p.innerText = predictions[n].class  + '  '
            + ""
            + '';
      // Positioned at the top left of the bounding box.
      // Height is whatever the text takes up.
      // Width subtracts text padding in CSS so fits perfectly.
      p.style = 'left: ' + predictions[n].bbox[2] + 'px;' +
          'top: ' + predictions[n].bbox[1] + 'px; ' +
          'width: ' + (predictions[n].bbox[0] - 10) + 'px;';

      const highlighter = document.createElement('div');
      highlighter.setAttribute('class', 'highlighter1');
    highlighter.style = 'left: ' + predictions[n].bbox[0] + 'px;' +
          'top: ' + predictions[n].bbox[1] + 'px;' +
          'width: ' + predictions[n].bbox[2] + 'px;' +
          'height: ' + predictions[n].bbox[3] + 'px;';
         p.style = 'left: ' + predictions[n].bbox[0] + 'px;' +
          'top: ' + predictions[n].bbox[1] + 'px; ' +
          'width: ' + (predictions[n].bbox[2] - 5) + 'px;';
         
         
         
setInterval(function(){
  event.target.parentNode.removeChild(highlighter);
 event.target.parentNode.removeChild(p);
 

},9);

     if (event.target.parentNode.appendChild(highlighter)){
     
    setTimeout(() => {
     setInterval(function(){
     
  event.target.parentNode.removeChild(highlighter);
  event.target.parentNode.removeChild(p);
 
 

},9);
 event.target.parentNode.appendChild(p);
  imageContainers[i].addEventListener('load', handleClick);
},9);  



      }
     
     
     
      if (event.target.parentNode.appendChild(p)){
      setTimeout(() => {
 event.target.parentNode.removeChild(p);
  imageContainers[i].addEventListener('load', handleClick);
 
}, 9); }

 if (event.target.parentNode.removeChild(p)){
      setTimeout(() => {
      document.getElementById("intru1").innerHTML = "";

 event.target.parentNode.removeChild(p);
  imageContainers[i].addEventListener('load', handleClick);
 
}, 3); }
 


     

      event.target.parentNode.appendChild(p1);
     event.target.parentNode.appendChild(p);
     event.target.parentNode.appendChild(highlighter);
     
     
     
     

 
   
      children.push.appendChild(highlighter);
      children.push.appendChild(p);
    }
   
    if ( predictions[n].class == "frisbee") {

predictions[n].class = "זוהה אובייקט אווירי"
document.getElementById("intru2").innerHTML = "זוהה אובייקט אווירי";

airhelpp.play();
airhelpp.loop = true;

song1air.play();
song1air.loop = true;


 const p = document.createElement('p');
      p.innerText = predictions[n].class  + '  '
            + ""
            + '';
      // Positioned at the top left of the bounding box.
      // Height is whatever the text takes up.
      // Width subtracts text padding in CSS so fits perfectly.
      p.style = 'left: ' + predictions[n].bbox[2] + 'px;' +
          'top: ' + predictions[n].bbox[1] + 'px; ' +
          'width: ' + (predictions[n].bbox[0] - 10) + 'px;';

      const highlighter = document.createElement('div');
      highlighter.setAttribute('class', 'highlighter1');
    highlighter.style = 'left: ' + predictions[n].bbox[0] + 'px;' +
          'top: ' + predictions[n].bbox[1] + 'px;' +
          'width: ' + predictions[n].bbox[2] + 'px;' +
          'height: ' + predictions[n].bbox[3] + 'px;';
         p.style = 'left: ' + predictions[n].bbox[0] + 'px;' +
          'top: ' + predictions[n].bbox[1] + 'px; ' +
          'width: ' + (predictions[n].bbox[2] - 5) + 'px;';
         
         
setInterval(function(){
  event.target.parentNode.removeChild(highlighter);
 event.target.parentNode.removeChild(p);
 

},9);

     if (event.target.parentNode.appendChild(highlighter)){
     
    setTimeout(() => {
     setInterval(function(){
     
  event.target.parentNode.removeChild(highlighter);
  event.target.parentNode.removeChild(p);
 
 

},9);
 event.target.parentNode.appendChild(p);
  imageContainers[i].addEventListener('load', handleClick);
},9);  



      }
     
     
     
      if (event.target.parentNode.appendChild(p)){
      setTimeout(() => {
 event.target.parentNode.removeChild(p);
  imageContainers[i].addEventListener('load', handleClick);
 
}, 9); }

 if (event.target.parentNode.removeChild(p)){
      setTimeout(() => {
      document.getElementById("intru1").innerHTML = "";

 event.target.parentNode.removeChild(p);
  imageContainers[i].addEventListener('load', handleClick);
 
}, 3); }
 


     

      event.target.parentNode.appendChild(p1);
     event.target.parentNode.appendChild(p);
     event.target.parentNode.appendChild(highlighter);
     
     
     
     

 
   
      children.push.appendChild(highlighter);
      children.push.appendChild(p);
    }
   
   
     if ( predictions[n].class == "airplane") {

predictions[n].class = "זוהה אובייקט אווירי"
document.getElementById("intru2").innerHTML = "זוהה אובייקט אווירי";

airhelpp.play();
airhelpp.loop = true;

song1air.play();
song1air.loop = true;


 const p = document.createElement('p');
     p.innerText = predictions[n].class  + '  '
            + ""
            + '';
      // Positioned at the top left of the bounding box.
      // Height is whatever the text takes up.
      // Width subtracts text padding in CSS so fits perfectly.
      p.style = 'left: ' + predictions[n].bbox[2] + 'px;' +
          'top: ' + predictions[n].bbox[1] + 'px; ' +
          'width: ' + (predictions[n].bbox[0] - 10) + 'px;';

      const highlighter = document.createElement('div');
      highlighter.setAttribute('class', 'highlighter1');
    highlighter.style = 'left: ' + predictions[n].bbox[0] + 'px;' +
          'top: ' + predictions[n].bbox[1] + 'px;' +
          'width: ' + predictions[n].bbox[2] + 'px;' +
          'height: ' + predictions[n].bbox[3] + 'px;';
         p.style = 'left: ' + predictions[n].bbox[0] + 'px;' +
          'top: ' + predictions[n].bbox[1] + 'px; ' +
          'width: ' + (predictions[n].bbox[2] - 5) + 'px;';
         
         
         
setInterval(function(){
  event.target.parentNode.removeChild(highlighter);
 event.target.parentNode.removeChild(p);
 

},9);

     if (event.target.parentNode.appendChild(highlighter)){
     
    setTimeout(() => {
     setInterval(function(){
     
  event.target.parentNode.removeChild(highlighter);
  event.target.parentNode.removeChild(p);
 
 

},9);
 event.target.parentNode.appendChild(p);
  imageContainers[i].addEventListener('load', handleClick);
},9);  



      }
     
     
     
      if (event.target.parentNode.appendChild(p)){
      setTimeout(() => {
 event.target.parentNode.removeChild(p);
  imageContainers[i].addEventListener('load', handleClick);
 
}, 9); }

 if (event.target.parentNode.removeChild(p)){
      setTimeout(() => {
      document.getElementById("intru1").innerHTML = "";

 event.target.parentNode.removeChild(p);
  imageContainers[i].addEventListener('load', handleClick);
 
}, 3); }
 


     

      event.target.parentNode.appendChild(p1);
     event.target.parentNode.appendChild(p);
     event.target.parentNode.appendChild(highlighter);
     
     
     
     


 
   
      children.push.appendChild(highlighter);
      children.push.appendChild(p);
    }
   
    if ( predictions[n].class == "kite") {

predictions[n].class = "זוהה אובייקט אווירי"
document.getElementById("intru2").innerHTML = "זוהה אובייקט אווירי";

airhelpp.play();
airhelpp.loop = true;

song1air.play();
song1air.loop = true;

 const p = document.createElement('p');
      p.innerText = predictions[n].class  + '  '
            + ""
            + '';
      // Positioned at the top left of the bounding box.
      // Height is whatever the text takes up.
      // Width subtracts text padding in CSS so fits perfectly.
      p.style = 'left: ' + predictions[n].bbox[2] + 'px;' +
          'top: ' + predictions[n].bbox[1] + 'px; ' +
          'width: ' + (predictions[n].bbox[0] - 10) + 'px;';

      const highlighter = document.createElement('div');
      highlighter.setAttribute('class', 'highlighter1');
    highlighter.style = 'left: ' + predictions[n].bbox[0] + 'px;' +
          'top: ' + predictions[n].bbox[1] + 'px;' +
          'width: ' + predictions[n].bbox[2] + 'px;' +
          'height: ' + predictions[n].bbox[3] + 'px;';
         p.style = 'left: ' + predictions[n].bbox[0] + 'px;' +
          'top: ' + predictions[n].bbox[1] + 'px; ' +
          'width: ' + (predictions[n].bbox[2] - 5) + 'px;';
         
         
         
setInterval(function(){
  event.target.parentNode.removeChild(highlighter);
 event.target.parentNode.removeChild(p);
 

},9);

     if (event.target.parentNode.appendChild(highlighter)){
     
    setTimeout(() => {
     setInterval(function(){
     
  event.target.parentNode.removeChild(highlighter);
  event.target.parentNode.removeChild(p);
 
 

},9);
 event.target.parentNode.appendChild(p);
  imageContainers[i].addEventListener('load', handleClick);
},9);  



      }
     
     
     
      if (event.target.parentNode.appendChild(p)){
      setTimeout(() => {
 event.target.parentNode.removeChild(p);
  imageContainers[i].addEventListener('load', handleClick);
 
}, 9); }

 if (event.target.parentNode.removeChild(p)){
      setTimeout(() => {
      document.getElementById("intru1").innerHTML = "";

 event.target.parentNode.removeChild(p);
  imageContainers[i].addEventListener('load', handleClick);
 
}, 3); }
 


     

      event.target.parentNode.appendChild(p1);
     event.target.parentNode.appendChild(p);
     event.target.parentNode.appendChild(highlighter);
     
     
     
     

 
      children.push.appendChild(highlighter);
      children.push.appendChild(p);
    }
   
 if ( predictions[n].class == "bird") {

predictions[n].class = "זוהה אובייקט אווירי"
document.getElementById("intru2").innerHTML = "זוהה אובייקט אווירי";

airhelpp.play();
airhelpp.loop = true;

song1air.play();
song1air.loop = true;


 const p = document.createElement('p');
     p.innerText = predictions[n].class  + '  '
            + ""
            + '';
      // Positioned at the top left of the bounding box.
      // Height is whatever the text takes up.
      // Width subtracts text padding in CSS so fits perfectly.
      p.style = 'left: ' + predictions[n].bbox[2] + 'px;' +
          'top: ' + predictions[n].bbox[1] + 'px; ' +
          'width: ' + (predictions[n].bbox[0] - 10) + 'px;';

      const highlighter = document.createElement('div');
      highlighter.setAttribute('class', 'highlighter1');
    highlighter.style = 'left: ' + predictions[n].bbox[0] + 'px;' +
          'top: ' + predictions[n].bbox[1] + 'px;' +
          'width: ' + predictions[n].bbox[2] + 'px;' +
          'height: ' + predictions[n].bbox[3] + 'px;';
         p.style = 'left: ' + predictions[n].bbox[0] + 'px;' +
          'top: ' + predictions[n].bbox[1] + 'px; ' +
          'width: ' + (predictions[n].bbox[2] - 5) + 'px;';
         
           
         
setInterval(function(){
  event.target.parentNode.removeChild(highlighter);
 event.target.parentNode.removeChild(p);
 

},9);

     if (event.target.parentNode.appendChild(highlighter)){
     
    setTimeout(() => {
     setInterval(function(){
     
  event.target.parentNode.removeChild(highlighter);
  event.target.parentNode.removeChild(p);
 
 

},9);
 event.target.parentNode.appendChild(p);
  imageContainers[i].addEventListener('load', handleClick);
},9);  



      }
     
     
     
      if (event.target.parentNode.appendChild(p)){
      setTimeout(() => {
 event.target.parentNode.removeChild(p);
  imageContainers[i].addEventListener('load', handleClick);
 
}, 9); }

 if (event.target.parentNode.removeChild(p)){
      setTimeout(() => {
      document.getElementById("intru1").innerHTML = "";

 event.target.parentNode.removeChild(p);
  imageContainers[i].addEventListener('load', handleClick);
 
}, 3); }
 


     

      event.target.parentNode.appendChild(p1);
     event.target.parentNode.appendChild(p);
     event.target.parentNode.appendChild(highlighter);
     
     
     
     


 
   
      children.push.appendChild(highlighter);
      children.push.appendChild(p);
    }
    }
   
   
   
   
       
   
   
  window.requestAnimationFrame(enhancedaerial);

  });
 
 
 
}

var myInterval2;

function begin2(event){

myInterval2 = setInterval(function () {

  enhancedaerial(event)}, 6);
 document.getElementById("demo").innerHTML = "זיהוי משני הופעל";
 
//when the button is clicked


$('#message').click(function () {

  //stop the interval
  clearInterval(myInterval2);
 
 
});

}
 
 function predictWebcam1() {

  document.getElementById("intru1").innerHTML = " ";

  // Now let's start classifying the stream.
  model.detect(video).then(function (predictions) {

 
 

 
    // Remove any highlighting we did previous frame.
    for (let i = 0; i < children.length; i++) {
   
   liveView.removeChild(children[i]);
    }
    children.splice(0);
   
    // Now lets loop through predictions and draw them to the live view if
    // they have a high confidence score.
   
   

           
            liveView.appendChild(highlighter);
            liveView.appendChild(p);

       
       
        // Store drawn objects in memory so we can delete them next time around.
        children.push(highlighter);
        children.push(p);
       
     
   
    // Call this function again to keep predicting when the browser is ready.
     
    window.requestAnimationFrame(predictWebcam1);
  });
}
 


    </script>
   
  </body>
</html>
